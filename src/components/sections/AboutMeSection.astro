---
import Card from '../ui/Card.astro';
import Button from '../ui/Button.astro';
import Tag from '../ui/Tag.astro';
import Badge from '../ui/Badge.astro';

export interface AboutStats {
  number: string;
  label: string;
  description?: string;
}

export interface AboutHighlight {
  icon: string;
  title: string;
  description: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  mainDescription?: string;
  profileImage?: string;
  stats?: AboutStats[];
  highlights?: AboutHighlight[];
  personalInfo?: {
    location?: string;
    email?: string;
    availability?: string;
    languages?: string[];
    interests?: string[];
  };
  showPersonalDetails?: boolean;
  class?: string;
}

const {
  title = "풀스택 개발자 김개발 소개",
  subtitle = "About Developer",
  mainDescription = "안녕하세요! 저는 React, Node.js, TypeScript를 활용한 사용자 경험과 기술적 우수성을 모두 추구하는 5년 경력 풀스택 개발자입니다. 최신 웹 기술을 배우는 것을 좋아하며, 복잡한 비즈니스 문제를 창의적인 웹 솔루션으로 해결하는 데 열정을 가지고 있습니다.",
  stats = [],
  highlights = [],
  personalInfo = {},
  showPersonalDetails = true,
  class: className = "",
} = Astro.props;

// Default stats
const defaultStats: AboutStats[] = [
  { number: "3+", label: "Years", description: "개발 경험" },
  { number: "50+", label: "Projects", description: "완료한 프로젝트" },
  { number: "15+", label: "Technologies", description: "사용 기술" },
  { number: "∞", label: "Coffee", description: "마신 커피 잔 수" }
];

// Default highlights
const defaultHighlights: AboutHighlight[] = [
  {
    icon: "💡",
    title: "창의적 문제 해결",
    description: "복잡한 비즈니스 요구사항을 효율적이고 우아한 코드로 변환하는 것을 좋아합니다."
  },
  {
    icon: "🌱",
    title: "지속적인 학습",
    description: "빠르게 변화하는 기술 환경에서 항상 최신 트렌드를 따라가며 성장하고 있습니다."
  },
  {
    icon: "🤝",
    title: "협업과 소통",
    description: "팀워크를 중시하며, 명확한 소통을 통해 프로젝트의 성공을 이끌어냅니다."
  },
  {
    icon: "⚡",
    title: "성능 최적화",
    description: "사용자 경험을 개선하기 위해 항상 성능과 접근성을 고려하여 개발합니다."
  }
];

// Default personal info
const defaultPersonalInfo = {
  location: "대한민국, 서울",
  email: "contact@example.com",
  availability: "프리랜스/정규직 가능",
  languages: ["한국어 (Native)", "English (Business)", "日本語 (Basic)"],
  interests: ["오픈소스 기여", "기술 블로그 작성", "사진", "여행", "독서"]
};

const displayStats = stats.length > 0 ? stats : defaultStats;
const displayHighlights = highlights.length > 0 ? highlights : defaultHighlights;
const displayPersonalInfo = { ...defaultPersonalInfo, ...personalInfo };
---

<section 
  class={`py-20 bg-gray-50 dark:bg-gray-800 ${className}`}
  aria-label="개발자 소개 섹션"
  role="region"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        {title}
        <span class="block text-lg sm:text-xl font-normal text-blue-600 dark:text-blue-400 mt-2">
          {subtitle}
        </span>
      </h2>
    </div>

    <!-- Main Content Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center mb-20">
      <!-- Profile Image and Info -->
      <div class="relative">
        <div class="relative mx-auto lg:mx-0 w-80 h-80 lg:w-96 lg:h-96">
          <!-- Profile Image Container -->
          <div class="relative w-full h-full rounded-2xl overflow-hidden bg-gradient-to-br from-blue-500 to-purple-600 p-1 shadow-2xl">
            <div class="w-full h-full rounded-2xl overflow-hidden bg-white dark:bg-gray-900">
              <!-- Placeholder for profile image -->
              <div class="w-full h-full bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-700 dark:to-gray-800 flex items-center justify-center">
                <svg class="w-32 h-32 text-gray-400 dark:text-gray-600" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                </svg>
              </div>
            </div>
          </div>

          <!-- Floating Elements -->
          <div class="absolute -top-4 -right-4 w-16 h-16 bg-yellow-400 rounded-lg rotate-12 shadow-lg opacity-80 animate-float flex items-center justify-center text-2xl">
            ⚡
          </div>
          <div class="absolute -bottom-4 -left-4 w-16 h-16 bg-pink-400 rounded-lg -rotate-12 shadow-lg opacity-80 animate-float animation-delay-1000 flex items-center justify-center text-2xl">
            💻
          </div>
          <div class="absolute top-1/3 -left-8 w-12 h-12 bg-green-400 rounded-full shadow-lg opacity-80 animate-float animation-delay-2000 flex items-center justify-center text-lg">
            🚀
          </div>
        </div>

        <!-- Stats Cards (Mobile) -->
        <div class="grid grid-cols-2 gap-4 mt-8 lg:hidden">
          {displayStats.map((stat) => (
            <Card variant="bordered" class="text-center p-4">
              <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">{stat.number}</div>
              <div class="text-sm font-medium text-gray-900 dark:text-white">{stat.label}</div>
              {stat.description && (
                <div class="text-xs text-gray-500 dark:text-gray-400 mt-1">{stat.description}</div>
              )}
            </Card>
          ))}
        </div>
      </div>

      <!-- Content -->
      <div class="space-y-8">
        <!-- Main Description -->
        <div class="space-y-6">
          <p class="text-lg text-gray-600 dark:text-gray-400 leading-relaxed">
            {mainDescription}
          </p>
          
          <div class="space-y-4">
            <p class="text-gray-600 dark:text-gray-400">
              저는 <span class="font-semibold text-blue-600 dark:text-blue-400">사용자 중심의 사고</span>로 
              기술적인 복잡성을 단순하고 직관적인 경험으로 변환하는 것을 목표로 합니다.
            </p>
            <p class="text-gray-600 dark:text-gray-400">
              코드의 품질과 성능을 중시하며, 항상 <span class="font-semibold text-purple-600 dark:text-purple-400">더 나은 솔루션</span>을 
              찾기 위해 노력하고 있습니다.
            </p>
          </div>
        </div>

        <!-- Personal Details -->
        {showPersonalDetails && (
          <div class="space-y-6">
            <h3 class="text-xl font-semibold text-gray-900 dark:text-white">개인 정보</h3>
            
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
              <div class="space-y-2">
                <div class="flex items-center space-x-2 text-gray-600 dark:text-gray-400">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  <span class="text-sm">{displayPersonalInfo.location}</span>
                </div>
                
                <div class="flex items-center space-x-2 text-gray-600 dark:text-gray-400">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  <span class="text-sm">{displayPersonalInfo.email}</span>
                </div>
              </div>

              <div class="space-y-2">
                <div class="flex items-center space-x-2">
                  <Badge variant="filled" size="sm">
                    {displayPersonalInfo.availability}
                  </Badge>
                </div>
              </div>
            </div>

            <!-- Languages -->
            {displayPersonalInfo.languages && displayPersonalInfo.languages.length > 0 && (
              <div class="space-y-3">
                <h4 class="text-lg font-medium text-gray-900 dark:text-white">언어</h4>
                <div class="flex flex-wrap gap-2">
                  {displayPersonalInfo.languages.map(language => (
                    <Tag variant="outline" size="sm" color="blue">
                      {language}
                    </Tag>
                  ))}
                </div>
              </div>
            )}

            <!-- Interests -->
            {displayPersonalInfo.interests && displayPersonalInfo.interests.length > 0 && (
              <div class="space-y-3">
                <h4 class="text-lg font-medium text-gray-900 dark:text-white">관심사</h4>
                <div class="flex flex-wrap gap-2">
                  {displayPersonalInfo.interests.map(interest => (
                    <Tag variant="ghost" size="sm" color="purple">
                      {interest}
                    </Tag>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}

        <!-- Call to Action -->
        <div class="flex flex-col sm:flex-row gap-4 pt-6">
          <Button 
            href="/projects" 
            variant="primary" 
            size="md"
            class="inline-flex items-center"
          >
            프로젝트 보기
            <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
            </svg>
          </Button>
          
          <Button 
            href="/contact" 
            variant="outline" 
            size="md"
            class="inline-flex items-center"
          >
            연락하기
            <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
            </svg>
          </Button>
        </div>
      </div>
    </div>

    <!-- Stats Grid (Desktop) -->
    <div class="hidden lg:grid grid-cols-2 xl:grid-cols-4 gap-6 mb-16">
      {displayStats.map((stat) => (
        <Card variant="bordered" class="text-center p-6 hover:shadow-lg transition-shadow duration-200">
          <div class="text-3xl font-bold text-blue-600 dark:text-blue-400 mb-2">{stat.number}</div>
          <div class="text-sm font-medium text-gray-900 dark:text-white mb-1">{stat.label}</div>
          {stat.description && (
            <div class="text-xs text-gray-500 dark:text-gray-400">{stat.description}</div>
          )}
        </Card>
      ))}
    </div>

    <!-- Highlights Section -->
    <div class="space-y-8">
      <div class="text-center">
        <h3 class="text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white mb-4">
          개발 철학 및 강점
        </h3>
        <p class="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
          효율적이고 사용자 중심의 웹 솔루션을 만들기 위한 저의 핵심 가치와 접근 방식입니다.
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {displayHighlights.map((highlight) => (
          <Card variant="bordered" class="p-6 hover:shadow-lg transition-all duration-200 hover:scale-[1.02]">
            <div class="flex items-start space-x-4">
              <div class="text-3xl flex-shrink-0" aria-hidden="true">{highlight.icon}</div>
              <div class="space-y-2">
                <h4 class="text-lg font-semibold text-gray-900 dark:text-white">
                  {highlight.title}
                </h4>
                <p class="text-gray-600 dark:text-gray-400 leading-relaxed">
                  {highlight.description}
                </p>
              </div>
            </div>
          </Card>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-20px) rotate(10deg);
    }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animation-delay-1000 {
    animation-delay: 1s;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }
</style> 