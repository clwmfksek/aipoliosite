---
import type { BadgeProps } from '../../types/components';

interface Props extends BadgeProps {}

const {
  variant = 'filled',
  color = 'primary',
  size = 'md',
  dot = false,
  pulse = false,
  class: className = '',
  ...rest
} = Astro.props;

// 기본 스타일
const baseStyles = 'inline-flex items-center gap-1 font-medium transition-all duration-200';

// 크기별 스타일
const sizeStyles = {
  sm: dot ? 'w-2 h-2' : 'px-2 py-0.5 text-xs rounded-full',
  md: dot ? 'w-2.5 h-2.5' : 'px-2.5 py-0.5 text-sm rounded-full',
  lg: dot ? 'w-3 h-3' : 'px-3 py-1 text-sm rounded-full',
};

// dot 스타일을 위한 추가 클래스
const dotStyles = dot ? 'rounded-full flex-shrink-0' : '';

// 컬러별 스타일
const colorStyles = {
  filled: {
    primary: 'bg-primary-500 text-white',
    secondary: 'bg-gray-500 text-white',
    accent: 'bg-accent-500 text-white',
    success: 'bg-green-500 text-white',
    warning: 'bg-yellow-500 text-white',
    error: 'bg-red-500 text-white',
    info: 'bg-blue-500 text-white',
  },
  outline: {
    primary: 'border border-primary-500 text-primary-600 bg-transparent',
    secondary: 'border border-gray-500 text-gray-600 bg-transparent',
    accent: 'border border-accent-500 text-accent-600 bg-transparent',
    success: 'border border-green-500 text-green-600 bg-transparent',
    warning: 'border border-yellow-500 text-yellow-600 bg-transparent',
    error: 'border border-red-500 text-red-600 bg-transparent',
    info: 'border border-blue-500 text-blue-600 bg-transparent',
  },
  soft: {
    primary: 'bg-primary-100 text-primary-800 dark:bg-primary-900/30 dark:text-primary-300',
    secondary: 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-300',
    accent: 'bg-accent-100 text-accent-800 dark:bg-accent-900/30 dark:text-accent-300',
    success: 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',
    warning: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300',
    error: 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300',
    info: 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300',
  },
  dot: {
    primary: 'bg-primary-500',
    secondary: 'bg-gray-500',
    accent: 'bg-accent-500',
    success: 'bg-green-500',
    warning: 'bg-yellow-500',
    error: 'bg-red-500',
    info: 'bg-blue-500',
  },
};

// 펄스 애니메이션 스타일
const pulseStyles = pulse ? 'animate-pulse' : '';

// 상태별 아이콘 (접근성 향상)
const statusIcons = {
  success:
    '<svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.236 4.53L7.53 10.23a.75.75 0 00-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd"></path></svg>',
  warning:
    '<svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true"><path fill-rule="evenodd" d="M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path></svg>',
  error:
    '<svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd"></path></svg>',
  info: '<svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z" clip-rule="evenodd"></path></svg>',
};

// 현재 색상이 상태 색상인지 확인 (dot이 아니고 상태 색상인 경우만)
const hasStatusIcon = ['success', 'warning', 'error', 'info'].includes(color) && !dot;

// 최종 클래스 조합
const badgeClasses = [
  baseStyles,
  sizeStyles[size],
  dotStyles,
  colorStyles[variant][color as keyof typeof colorStyles.filled],
  pulseStyles,
  className,
]
  .filter(Boolean)
  .join(' ');
---

<span class={badgeClasses} {...rest}>
  {!dot && hasStatusIcon && <span set:html={statusIcons[color as keyof typeof statusIcons]} />}
  {!dot && <slot />}
</span>

<style>
  /* 커스텀 펄스 애니메이션 */
  .badge-pulse {
    animation: badge-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes badge-pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.7;
    }
  }

  /* 다크모드 향상 */
  :global(.dark) .badge-filled {
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3);
  }

  :global(.dark) .badge-outline {
    @apply border-opacity-60;
  }

  /* 호버 효과 (클릭 가능한 경우) */
  .badge-clickable {
    @apply cursor-pointer hover:scale-105 hover:shadow-sm;
  }

  /* 포커스 상태 */
  .badge-focusable:focus {
    @apply outline-none ring-2 ring-offset-2;
  }

  .badge-focusable.badge-primary:focus {
    @apply ring-primary-500;
  }

  .badge-focusable.badge-success:focus {
    @apply ring-green-500;
  }

  .badge-focusable.badge-warning:focus {
    @apply ring-yellow-500;
  }

  .badge-focusable.badge-error:focus {
    @apply ring-red-500;
  }

  :global(.dark) .badge-focusable:focus {
    @apply ring-offset-gray-800;
  }
</style>
