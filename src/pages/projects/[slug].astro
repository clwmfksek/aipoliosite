---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import MainContent from '../../components/layout/MainContent.astro';
import Badge from '../../components/ui/Badge.astro';
import Button from '../../components/ui/Button.astro';
import Card from '../../components/ui/Card.astro';
import Tag from '../../components/ui/Tag.astro';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

type Props = {
  project: CollectionEntry<'projects'>;
};

const { project } = Astro.props;
const { Content } = await project.render();

// 관련 프로젝트 찾기 (같은 기술 스택 또는 카테고리)
const allProjects = await getCollection('projects');
const relatedProjects = allProjects
  .filter(p => 
    p.slug !== project.slug && 
    p.data.published &&
    (
      p.data.category === project.data.category ||
      p.data.tech.some(tech => project.data.tech.includes(tech))
    )
  )
  .sort((a, b) => {
    // 기술 스택 겹치는 개수로 정렬
    const aMatchCount = a.data.tech.filter(tech => project.data.tech.includes(tech)).length;
    const bMatchCount = b.data.tech.filter(tech => project.data.tech.includes(tech)).length;
    return bMatchCount - aMatchCount;
  })
  .slice(0, 3);

// SEO 및 메타데이터
const pageTitle = project.data.seo?.title || `${project.data.title} - 프로젝트 상세 | 포트폴리오`;
const pageDescription = project.data.seo?.description || project.data.description || project.data.longDescription;
const pageImage = project.data.seo?.image || project.data.image;

// 구조화된 데이터를 위한 정보
const structuredData = {
  "@context": "https://schema.org",
  "@type": "CreativeWork",
  "name": project.data.title,
  "description": project.data.description,
  "url": Astro.url.href,
  "image": new URL(project.data.image, Astro.site),
  "author": {
    "@type": "Person",
    "name": "포트폴리오 소유자"
  },
  "dateCreated": project.data.date.toISOString(),
  "keywords": project.data.tech.join(', '),
  "programmingLanguage": project.data.tech,
  "applicationCategory": project.data.category,
  "operatingSystem": "Web Browser"
};

// Breadcrumb 데이터
const breadcrumbs = [
  { name: '홈', href: '/' },
  { name: '프로젝트', href: '/projects' },
  { name: project.data.title, href: `/projects/${project.slug}` }
];
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  image={pageImage}
>
  <!-- Screen reader friendly main heading -->
  <h1 class="sr-only">{project.data.title} - 프로젝트 상세</h1>
  
  <!-- 구조화된 데이터 -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

  <!-- Breadcrumb -->
  <section class="bg-white dark:bg-secondary-900 border-b border-secondary-200 dark:border-secondary-700">
    <MainContent maxWidth="6xl" padding="lg">
      <nav class="flex items-center space-x-2 text-sm text-secondary-600 dark:text-secondary-300 py-4">
        {breadcrumbs.map((item, index) => (
          <div class="flex items-center">
            {index > 0 && (
              <svg class="w-4 h-4 mx-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
            )}
            {index === breadcrumbs.length - 1 ? (
              <span class="text-primary-600 dark:text-primary-400 font-medium">{item.name}</span>
            ) : (
              <a href={item.href} class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                {item.name}
              </a>
            )}
          </div>
        ))}
      </nav>
    </MainContent>
  </section>

  <!-- Hero Section -->
  <section class="py-12 bg-gradient-to-br from-primary-50 to-accent-50 dark:from-secondary-900 dark:to-secondary-800">
    <MainContent maxWidth="6xl" padding="lg">
      <div class="grid lg:grid-cols-2 gap-12 items-center">
        <!-- 프로젝트 정보 -->
        <div>
          <!-- 카테고리 배지 -->
          <div class="mb-6">
            <Badge variant="filled" class="mb-4">
              {project.data.category === 'web' ? '웹 애플리케이션' : 
               project.data.category === 'mobile' ? '모바일 앱' : 
               project.data.category === 'desktop' ? '데스크톱 앱' : 
               project.data.category === 'backend' ? '백엔드' : 
               project.data.category === 'fullstack' ? '풀스택' : '기타'}
            </Badge>
          </div>

          <h2 class="text-4xl lg:text-5xl font-bold text-secondary-900 dark:text-white mb-6">
            {project.data.title}
          </h2>

          <p class="text-xl text-secondary-600 dark:text-secondary-300 mb-8 leading-relaxed">
            {project.data.longDescription || project.data.description}
          </p>

          <!-- 기술 스택 -->
          <div class="mb-8">
            <h3 class="text-sm font-semibold text-secondary-700 dark:text-secondary-300 mb-3 uppercase tracking-wide">
              사용 기술
            </h3>
            <div class="flex flex-wrap gap-2">
              {project.data.tech.map((tech) => (
                <Tag variant="outline" size="sm">{tech}</Tag>
              ))}
            </div>
          </div>

          <!-- 프로젝트 상태 및 날짜 -->
          <div class="grid grid-cols-2 gap-6 mb-8">
            <div>
              <h4 class="text-sm font-semibold text-secondary-700 dark:text-secondary-300 mb-2 uppercase tracking-wide">
                상태
              </h4>
                             <Badge 
                 variant={project.data.status === 'completed' ? 'soft' : 'outline'}
                 color={
                   project.data.status === 'completed' ? 'success' :
                   project.data.status === 'in-progress' ? 'info' : 'secondary'
                 }
               >
                 {project.data.status === 'completed' ? '완료됨' :
                  project.data.status === 'in-progress' ? '진행 중' : '계획됨'}
               </Badge>
            </div>
            <div>
              <h4 class="text-sm font-semibold text-secondary-700 dark:text-secondary-300 mb-2 uppercase tracking-wide">
                프로젝트 기간
              </h4>
              <p class="text-secondary-600 dark:text-secondary-400">
                {project.data.date.toLocaleDateString('ko-KR', { 
                  year: 'numeric', 
                  month: 'long'
                })}
              </p>
            </div>
          </div>

          <!-- 액션 버튼들 -->
          <div class="flex flex-wrap gap-4">
            {(project.data.demo || project.data.demoUrl) && (
              <Button 
                variant="filled" 
                size="lg"
                href={project.data.demo || project.data.demoUrl}
                class="inline-flex items-center gap-2"
                target="_blank"
                rel="noopener noreferrer"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
                라이브 데모
              </Button>
            )}
            
            {(project.data.github || project.data.githubUrl) && (
              <Button 
                variant="outline"
                size="lg"
                href={project.data.github || project.data.githubUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2"
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
                GitHub
              </Button>
            )}
            
            {project.data.documentation && (
              <Button 
                variant="outline" 
                size="lg"
                href={project.data.documentation}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                문서
              </Button>
            )}
          </div>
        </div>

        <!-- 프로젝트 이미지 -->
        <div class="relative">
          <div class="relative overflow-hidden rounded-2xl shadow-2xl">
            <img 
              src={project.data.image} 
              alt={project.data.title}
              class="w-full h-[400px] object-cover"
              loading="eager"
            />
            <!-- 오버레이 -->
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
          </div>
        </div>
      </div>
    </MainContent>
  </section>

  <!-- 프로젝트 상세 내용 -->
  <section class="py-16 bg-white dark:bg-secondary-900">
    <MainContent maxWidth="4xl" padding="lg">
      <article class="prose prose-lg dark:prose-invert max-w-none">
        <Content />
      </article>
    </MainContent>
  </section>

  <!-- 관련 프로젝트 -->
  {relatedProjects.length > 0 && (
    <section class="py-16 bg-secondary-50 dark:bg-secondary-800">
      <MainContent maxWidth="6xl" padding="lg">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-secondary-900 dark:text-white mb-4">
            관련 프로젝트
          </h2>
          <p class="text-secondary-600 dark:text-secondary-300">
            비슷한 기술을 사용한 다른 프로젝트들을 확인해보세요
          </p>
        </div>

        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedProjects.map((relatedProject) => (
            <Card class="hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 group">
              <!-- 프로젝트 이미지 -->
              <div class="relative overflow-hidden rounded-t-lg">
                <img 
                  src={relatedProject.data.image} 
                  alt={relatedProject.data.title}
                  class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
                  loading="lazy"
                />
                <!-- 상태 배지 -->
                <div class="absolute top-3 right-3">
                  <Badge 
                    variant={relatedProject.data.status === 'completed' ? 'filled' : 'outline'}
                    class={
                      relatedProject.data.status === 'completed' ? 'bg-green-100 text-green-800' :
                      relatedProject.data.status === 'in-progress' ? 'bg-blue-100 text-blue-800' :
                      'bg-gray-100 text-gray-800'
                    }
                  >
                    {relatedProject.data.status === 'completed' ? '완료' :
                     relatedProject.data.status === 'in-progress' ? '진행중' : '계획'}
                  </Badge>
                </div>
              </div>

              <!-- 카드 내용 -->
              <div class="p-6">
                <div class="mb-3">
                  <Badge variant="outline" size="sm">
                    {relatedProject.data.category === 'web' ? '웹' : 
                     relatedProject.data.category === 'mobile' ? '모바일' : 
                     relatedProject.data.category === 'fullstack' ? '풀스택' : '기타'}
                  </Badge>
                </div>

                <h3 class="text-xl font-bold text-secondary-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                  {relatedProject.data.title}
                </h3>

                <p class="text-secondary-600 dark:text-secondary-300 mb-4 text-sm line-clamp-2">
                  {relatedProject.data.description}
                </p>

                <!-- 기술 스택 -->
                <div class="mb-4">
                  <div class="flex flex-wrap gap-1">
                                         {relatedProject.data.tech.slice(0, 3).map((tech) => (
                       <Tag variant="outline" size="sm">{tech}</Tag>
                     ))}
                     {relatedProject.data.tech.length > 3 && (
                       <Tag variant="outline" size="sm">+{relatedProject.data.tech.length - 3}</Tag>
                     )}
                  </div>
                </div>

                <!-- 액션 버튼들 -->
                <div class="flex gap-2">
                  <Button 
                    variant="filled" 
                    size="sm" 
                    href={`/projects/${relatedProject.slug}`}
                    class="flex-1"
                  >
                    자세히 보기
                  </Button>
                  
                  {(relatedProject.data.demo || relatedProject.data.demoUrl) && (
                    <Button 
                      variant="outline" 
                      size="sm"
                      href={relatedProject.data.demo || relatedProject.data.demoUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="p-2"
                      aria-label="데모 보기"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                      </svg>
                    </Button>
                  )}
                  
                  {(relatedProject.data.github || relatedProject.data.githubUrl) && (
                    <Button 
                      variant="outline" 
                      size="sm"
                      href={relatedProject.data.github || relatedProject.data.githubUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="p-2"
                      aria-label="GitHub 보기"
                    >
                      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                      </svg>
                    </Button>
                  )}
                </div>
              </div>
            </Card>
          ))}
        </div>
      </MainContent>
    </section>
  )}

  <!-- 프로젝트 네비게이션 -->
  <section class="py-8 bg-secondary-50 dark:bg-secondary-800 border-t border-secondary-200 dark:border-secondary-700">
    <MainContent maxWidth="6xl" padding="lg">
      <div class="flex justify-between items-center">
        <Button 
          variant="outline" 
          href="/projects"
          class="inline-flex items-center gap-2"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          모든 프로젝트 보기
        </Button>

        <!-- 공유 버튼들 -->
        <div class="flex items-center gap-4">
          <span class="text-sm text-secondary-600 dark:text-secondary-400">공유하기:</span>
          <div class="flex gap-2">
            <button 
              onclick={`window.open('https://twitter.com/intent/tweet?text=${encodeURIComponent(project.data.title)}&url=${encodeURIComponent(Astro.url.href)}', '_blank', 'width=550,height=420')`}
              class="p-2 text-secondary-600 hover:text-primary-600 dark:text-secondary-400 dark:hover:text-primary-400 transition-colors"
              aria-label="Twitter에서 공유"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
              </svg>
            </button>
            
            <button 
              onclick={`window.open('https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}', '_blank', 'width=550,height=420')`}
              class="p-2 text-secondary-600 hover:text-primary-600 dark:text-secondary-400 dark:hover:text-primary-400 transition-colors"
              aria-label="LinkedIn에서 공유"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </MainContent>
  </section>
</Layout>

<style>
  /* 프로젝트 상세 페이지 스타일 */
  .prose {
    @apply text-secondary-700 dark:text-secondary-300;
  }
  
  .prose h2 {
    @apply text-2xl font-bold text-secondary-900 dark:text-white mt-12 mb-6 pb-3 border-b border-secondary-200 dark:border-secondary-700;
  }
  
  .prose h3 {
    @apply text-xl font-semibold text-secondary-800 dark:text-secondary-200 mt-8 mb-4;
  }
  
  .prose p {
    @apply mb-6 leading-relaxed;
  }
  
  .prose ul, .prose ol {
    @apply mb-6;
  }
  
  .prose li {
    @apply mb-2;
  }
  
  .prose code {
    @apply bg-secondary-100 dark:bg-secondary-800 px-2 py-1 rounded text-sm;
  }
  
  .prose pre {
    @apply bg-secondary-100 dark:bg-secondary-800 p-4 rounded-lg overflow-x-auto;
  }
  
  .prose blockquote {
    @apply border-l-4 border-primary-500 pl-6 italic text-secondary-600 dark:text-secondary-400;
  }

  /* 텍스트 클램핑 */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  // 공유 기능
  function shareProject() {
    if (navigator.share) {
      navigator.share({
        title: document.title,
        url: window.location.href
      });
    }
  }
</script>
