---
import Card from '../ui/Card.astro';
import Badge from '../ui/Badge.astro';

export interface SkillItem {
  name: string;
  level: 'beginner' | 'intermediate' | 'advanced' | 'expert';
  icon?: string;
  description?: string;
  experience?: string; // e.g., "3 years"
  lastUsed?: string; // e.g., "2024"
}

export interface SkillCategory {
  name: string;
  description?: string;
  skills: SkillItem[];
  color?: 'blue' | 'green' | 'purple' | 'pink' | 'orange' | 'teal';
}

export interface Props {
  title?: string;
  subtitle?: string;
  description?: string;
  categories?: SkillCategory[];
  showLevels?: boolean;
  showExperience?: boolean;
  gridLayout?: 'auto' | '2-col' | '3-col';
  class?: string;
}

const {
  title = "풀스택 개발 기술 스택",
  subtitle = "Frontend & Backend Technologies",
  description = "React, Vue.js, Node.js, TypeScript 등 다양한 프로젝트를 통해 습득하고 발전시켜온 전문 기술들입니다",
  categories = [],
  showLevels = true,
  showExperience = true,
  gridLayout = 'auto',
  class: className = "",
} = Astro.props;

// Default categories
const defaultCategories: SkillCategory[] = [
  {
    name: "Frontend",
    description: "사용자 인터페이스 및 경험",
    color: "blue",
    skills: [
      { name: "React", level: "advanced", icon: "⚛️", experience: "3년", lastUsed: "2024" },
      { name: "Vue.js", level: "intermediate", icon: "💚", experience: "2년", lastUsed: "2024" },
      { name: "TypeScript", level: "advanced", icon: "🔷", experience: "2년", lastUsed: "2024" },
      { name: "JavaScript", level: "expert", icon: "🟨", experience: "4년", lastUsed: "2024" },
      { name: "HTML5", level: "expert", icon: "🟧", experience: "5년", lastUsed: "2024" },
      { name: "CSS3", level: "advanced", icon: "🎨", experience: "4년", lastUsed: "2024" },
      { name: "Tailwind CSS", level: "advanced", icon: "💨", experience: "2년", lastUsed: "2024" },
      { name: "Sass/SCSS", level: "intermediate", icon: "💖", experience: "2년", lastUsed: "2023" }
    ]
  },
  {
    name: "Backend",
    description: "서버 및 API 개발",
    color: "green",
    skills: [
      { name: "Node.js", level: "advanced", icon: "🟢", experience: "3년", lastUsed: "2024" },
      { name: "Express.js", level: "advanced", icon: "🚂", experience: "3년", lastUsed: "2024" },
      { name: "Python", level: "intermediate", icon: "🐍", experience: "2년", lastUsed: "2024" },
      { name: "FastAPI", level: "intermediate", icon: "⚡", experience: "1년", lastUsed: "2024" },
      { name: "REST API", level: "advanced", icon: "🔗", experience: "3년", lastUsed: "2024" },
      { name: "GraphQL", level: "intermediate", icon: "⚡", experience: "1년", lastUsed: "2023" }
    ]
  },
  {
    name: "Database",
    description: "데이터베이스 및 저장소",
    color: "purple",
    skills: [
      { name: "PostgreSQL", level: "advanced", icon: "🐘", experience: "2년", lastUsed: "2024" },
      { name: "MongoDB", level: "intermediate", icon: "🍃", experience: "2년", lastUsed: "2024" },
      { name: "Redis", level: "intermediate", icon: "🔴", experience: "1년", lastUsed: "2024" },
      { name: "MySQL", level: "intermediate", icon: "🐬", experience: "2년", lastUsed: "2023" }
    ]
  },
  {
    name: "DevOps & Tools",
    description: "개발 도구 및 배포",
    color: "orange",
    skills: [
      { name: "Git", level: "advanced", icon: "🌿", experience: "4년", lastUsed: "2024" },
      { name: "Docker", level: "intermediate", icon: "🐳", experience: "2년", lastUsed: "2024" },
      { name: "AWS", level: "intermediate", icon: "☁️", experience: "1년", lastUsed: "2024" },
      { name: "Vercel", level: "advanced", icon: "▲", experience: "2년", lastUsed: "2024" },
      { name: "GitHub Actions", level: "intermediate", icon: "⚙️", experience: "1년", lastUsed: "2024" },
      { name: "VS Code", level: "expert", icon: "💙", experience: "5년", lastUsed: "2024" }
    ]
  },
  {
    name: "Frameworks & Libraries",
    description: "프레임워크 및 라이브러리",
    color: "pink",
    skills: [
      { name: "Next.js", level: "advanced", icon: "⬛", experience: "2년", lastUsed: "2024" },
      { name: "Astro", level: "intermediate", icon: "🚀", experience: "6개월", lastUsed: "2024" },
      { name: "Nuxt.js", level: "intermediate", icon: "💚", experience: "1년", lastUsed: "2024" },
      { name: "React Query", level: "intermediate", icon: "🔄", experience: "1년", lastUsed: "2024" },
      { name: "Zustand", level: "intermediate", icon: "🐻", experience: "1년", lastUsed: "2024" }
    ]
  },
  {
    name: "Design & Others",
    description: "디자인 및 기타 도구",
    color: "teal",
    skills: [
      { name: "Figma", level: "intermediate", icon: "🎨", experience: "2년", lastUsed: "2024" },
      { name: "Adobe XD", level: "beginner", icon: "🟣", experience: "6개월", lastUsed: "2023" },
      { name: "Jest", level: "intermediate", icon: "🃏", experience: "1년", lastUsed: "2024" },
      { name: "Cypress", level: "beginner", icon: "🌲", experience: "6개월", lastUsed: "2023" }
    ]
  }
];

const displayCategories = categories.length > 0 ? categories : defaultCategories;

const getLevelColor = (level: SkillItem['level']) => {
  switch (level) {
    case 'expert': return 'text-green-600 dark:text-green-400';
    case 'advanced': return 'text-blue-600 dark:text-blue-400';
    case 'intermediate': return 'text-orange-600 dark:text-orange-400';
    case 'beginner': return 'text-gray-600 dark:text-gray-400';
    default: return 'text-gray-600 dark:text-gray-400';
  }
};

const getLevelText = (level: SkillItem['level']) => {
  switch (level) {
    case 'expert': return '전문가';
    case 'advanced': return '고급';
    case 'intermediate': return '중급';
    case 'beginner': return '초급';
    default: return '초급';
  }
};

const getCategoryColor = (color?: string) => {
  const colors: Record<string, string> = {
    blue: 'from-blue-500 to-blue-600',
    green: 'from-green-500 to-green-600',
    purple: 'from-purple-500 to-purple-600',
    pink: 'from-pink-500 to-pink-600',
    orange: 'from-orange-500 to-orange-600',
    teal: 'from-teal-500 to-teal-600',
  };
  return color && colors[color] ? colors[color] : colors.blue;
};

const getGridClasses = (layout: string) => {
  switch (layout) {
    case '2-col': return 'grid-cols-1 md:grid-cols-2';
    case '3-col': return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3';
    default: return 'grid-cols-1 md:grid-cols-2 xl:grid-cols-3';
  }
};
---

<section 
  class={`py-20 bg-white dark:bg-gray-900 ${className}`}
  aria-label="기술 스택 및 역량 섹션"
  role="region"
  tabindex="-1"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        {title}
        <span class="block text-lg sm:text-xl font-normal text-blue-600 dark:text-blue-400 mt-2">
          {subtitle}
        </span>
      </h2>
      {description && (
        <p class="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
          {description}
        </p>
      )}
    </div>

    <!-- Skills Categories Grid -->
    <div class={`grid ${getGridClasses(gridLayout)} gap-8`}>
      {displayCategories.map((category) => (
        <Card variant="elevated" class="p-6 transition-all duration-300 hover:shadow-xl">
          <!-- Category Header -->
          <div class="mb-6">
            <h3 class="sr-only">{category.name} 기술 분야</h3>
            <div class={`inline-block px-4 py-2 rounded-full bg-gradient-to-r ${getCategoryColor(category.color)} text-white text-sm font-medium mb-3`}>
              {category.name}
            </div>
            {category.description && (
              <p class="text-gray-600 dark:text-gray-400 text-sm">
                {category.description}
              </p>
            )}
          </div>

          <!-- Skills Grid -->
          <div class="space-y-4" role="list" aria-label={`${category.name || '기술'} 기술 목록`}>
            {category.skills.map((skill) => (
              <div class="flex items-center justify-between p-3 rounded-lg bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200" role="listitem">
                <div class="flex items-center space-x-3">
                  {skill.icon && (
                    <span class="text-xl flex-shrink-0" aria-hidden="true">{skill.icon}</span>
                  )}
                  <div class="flex-1">
                    <div class="flex items-center space-x-2">
                      <span class="font-medium text-gray-900 dark:text-white">
                        {skill.name}
                      </span>
                      {showLevels && (
                        <Badge 
                          variant="filled" 
                          size="sm"
                          class={getLevelColor(skill.level)}
                          aria-label={`기술 수준: ${getLevelText(skill.level)}`}
                        >
                          {getLevelText(skill.level)}
                        </Badge>
                      )}
                    </div>
                    {showExperience && (skill.experience || skill.lastUsed) && (
                      <div class="flex items-center space-x-4 mt-1">
                        {skill.experience && (
                          <span class="text-xs text-gray-500 dark:text-gray-400">
                            <span aria-hidden="true">📅</span>
                            <span class="sr-only">경험: </span>
                            {skill.experience}
                          </span>
                        )}
                        {skill.lastUsed && (
                          <span class="text-xs text-gray-500 dark:text-gray-400">
                            <span aria-hidden="true">🕒</span>
                            <span class="sr-only">마지막 사용: </span>
                            {skill.lastUsed}
                          </span>
                        )}
                      </div>
                    )}
                  </div>
                </div>

                <!-- Skill Level Visual -->
                {showLevels && (
                  <div class="flex items-center space-x-1" aria-hidden="true">
                    {[1, 2, 3, 4, 5].map((dot) => {
                      const isActive = (() => {
                        switch (skill.level) {
                          case 'expert': return dot <= 5;
                          case 'advanced': return dot <= 4;
                          case 'intermediate': return dot <= 3;
                          case 'beginner': return dot <= 2;
                          default: return dot <= 1;
                        }
                      })();
                      
                      return (
                        <div 
                          class={`w-2 h-2 rounded-full transition-colors duration-200 ${
                            isActive 
                              ? `bg-gradient-to-r ${getCategoryColor(category.color)}` 
                              : 'bg-gray-300 dark:bg-gray-600'
                          }`}
                        />
                      );
                    })}
                  </div>
                )}
              </div>
            ))}
          </div>

          <!-- Category Stats -->
          <div class="mt-6 pt-4 border-t border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400" role="group" aria-label={`${category.name || '기술'} 분야 통계`}>
              <span>총 기술: {category.skills.length}개</span>
              <div class="flex items-center space-x-4">
                <span>
                  고급+: {category.skills.filter(s => s.level === 'advanced' || s.level === 'expert').length}개
                </span>
              </div>
            </div>
          </div>
        </Card>
      ))}
    </div>

    <!-- Overall Stats -->
    <div class="mt-16">
      <Card variant="bordered" class="p-8 bg-gradient-to-br from-gray-50 to-white dark:from-gray-800 dark:to-gray-900">
        <div class="text-center">
          <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
            기술 통계 요약
          </h3>
          
          <div class="grid grid-cols-2 md:grid-cols-4 gap-6" role="group" aria-label="전체 기술 통계">
            <div class="text-center">
              <div class="text-3xl font-bold text-blue-600 dark:text-blue-400 mb-2" aria-label="총 기술 개수">
                {displayCategories.reduce((acc, cat) => acc + cat.skills.length, 0)}
              </div>
              <div class="text-sm text-gray-600 dark:text-gray-400">
                총 기술
              </div>
            </div>
            
            <div class="text-center">
              <div class="text-3xl font-bold text-green-600 dark:text-green-400 mb-2" aria-label="전문가 수준 기술 개수">
                {displayCategories.reduce((acc, cat) => 
                  acc + cat.skills.filter(s => s.level === 'expert').length, 0
                )}
              </div>
              <div class="text-sm text-gray-600 dark:text-gray-400">
                전문가 수준
              </div>
            </div>
            
            <div class="text-center">
              <div class="text-3xl font-bold text-purple-600 dark:text-purple-400 mb-2" aria-label="고급 수준 기술 개수">
                {displayCategories.reduce((acc, cat) => 
                  acc + cat.skills.filter(s => s.level === 'advanced').length, 0
                )}
              </div>
              <div class="text-sm text-gray-600 dark:text-gray-400">
                고급 수준
              </div>
            </div>
            
            <div class="text-center">
              <div class="text-3xl font-bold text-orange-600 dark:text-orange-400 mb-2" aria-label="기술 분야 개수">
                {displayCategories.length}
              </div>
              <div class="text-sm text-gray-600 dark:text-gray-400">
                기술 분야
              </div>
            </div>
          </div>
        </div>
      </Card>
    </div>

    <!-- Learning Section -->
    <div class="mt-12 text-center">
      <div class="inline-flex items-center px-6 py-3 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 text-white" role="status" aria-label="학습 현황">
        <span class="mr-2" aria-hidden="true">🌱</span>
        <span class="font-medium">지속적으로 새로운 기술을 학습하고 성장하고 있습니다</span>
      </div>
    </div>
  </div>
</section> 